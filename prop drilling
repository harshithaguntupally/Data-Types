13th FEB :
Use Context(): 
Prop (properties are used to pass data from parent component to child component
Prop Drilling is the process of passing data from parent component to deeply (nested) child component through intermediate components, by passing data as props at

Ex : 
function App(){
  const data = "I am Harshitha"
  return(
    <div>
      <User1 data={data}/>
    </div>
  )
}
//user1 components
function User1({data}){
  return <User2 data={data}/>
}
//user2 components
function User2({data}){
  return <User3 data={data}/>
}
//user3 components
function User3({data}){
  return <User4 data={data}/>
}
//user4 components
function User4({data}){
  return <div>{data}</div>
}
export default App;
Output : I am Harshitha

Ex 2 : Error occurs due to not defining the  data in return statement.  
function App(){
  const data = "I am Harshitha"
  return(
    <div>
      <User1 data={data}/>
    </div>
  )
}
//user1 components
function User1({data}){
  return <User2 />
}
//user2 components
function User2({data}){
  return <User3 />
}
//user3 components
function User3({data}){
  
  return <User4 />
}
//user4 components
function User4({data}){
  return <div>{data}</div>
}
export default App;

REACT USE CONTEXT :
Ex:
import React,{createContext, useContext} from 'react'
// create context to holfd data
const DataContext=createContext()
function App(){
  const data = "I am Harshitha"
  return(
    //provide data to entire app
    <DataContext.Provider value={data}>
      <User1/>
    </DataContext.Provider>
  )
}

//user1 components
function User1(){
  return <User2 />
}
//user2 components
function User2(){
  return <User3/>
}
//user3 components
function User3(){
  return <User4/>
}
//user4 components
function User4(){
  const data = useContext(DataContext);
  return <div>{data}</div>
}
export default App;

